

@using DTO.Model;
@using BusinessLogic.BLL

@{
    @model Person

    var personBLL = new PersonBLL();


    ViewBag.Title = "PersonCreation";


    if (IsPost)
    {
        string personName = Request.Form["m.name"];


        <text>
            Du har skabt en person. Tillykke.
        </text>
    }
}


<h2>PersonCreation</h2>
@{
    String action = "";
}
@if (Model == null)
{
    action = "AddPerson";
}
else
{
    action = "EditPerson";
}

@using (Html.BeginForm(action, "Person"))
{
    @Html.ValidationSummary()

    @Html.EditorFor(m => m.Name)
    @Html.ValidationMessageFor(m => m.Name)


    <button type="submit">Submit</button>
}






<table>
    <tr>
        <th>
            @Html.DisplayName("ID")
        </th>
        <th>
            @Html.DisplayName("Name")
        </th>
        <th>
            @Html.DisplayName("Actions")
        </th>
    </tr>
    <!-- Den her metode bruger getPerson på index for at fange et element, men getPerson kigger på PersonId, så fejler når ID ikke alle er inkrementeret med 1-->>
    @foreach (var e in personBLL.GetPeople())
    {
        if (e.Name != null)
        {
            <tr>
                <td>
                    @Html.DisplayFor(item => e.PersonId)
                </td>
                <td>
                    @Html.DisplayFor(item => e.Name)
                </td>
                <td>
                    @using (Html.BeginForm("RemovePerson", "Person", new { id = e.PersonId }))
                    {


                        <button type="submit" value="">Remove</button>

                    }

                    @using(Html.BeginForm("EditPerson", "Person", new {id = e.PersonId}))
                    {
                        <button type="submit">Edit @e.Name</button>
                    }
                </td>
            </tr>
        }
    }

</table>

